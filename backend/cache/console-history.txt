await nftCollection.ownerOf(0);
ethers.formatEther(await ethers.provider.getBalance(deployer.address));
ethers.formatEther(await ethers.provider.getBalance(owner.address));
ethers.formatEther(await ethers.provider.getBalance(bidder2.address));
ethers.formatEther(await ethers.provider.getBalance(bidder1.address));
await auction.finalizeAuction();
await network.provider.send("evm_mine");
await network.provider.send("evm_increaseTime", [86400]);
ethers.formatEther(await ethers.provider.getBalance(owner.address));
ethers.formatEther(await ethers.provider.getBalance(bidder2.address));
ethers.formatEther(await ethers.provider.getBalance(bidder1.address));
await auction.highestBid();
await auction.connect(bidder2).bid({ value: ethers.parseEther("0.05") });
await auction.highestBidder();
await auction.highestBid();
await auction.connect(bidder1).bid({ value: ethers.parseEther("0.02") });
await auction.auctionEndTime();
await auction.highestBidder();
await auction.highestBid();
const auction = await EnglishAuction.attach("0xCf7Ed3AccA5a467e9e704C703E8D87F634fB0Fc9");
const EnglishAuction = await ethers.getContractFactory("EnglishAuction");
const nftCollection = await NFTCollection.attach("0x5FbDB2315678afecb367f032d93F642f64180aa3");
const NFTCollection = await ethers.getContractFactory("NFTCollection");
const [deployer, owner, bidder1, bidder2] = await ethers.getSigners();